{"version":3,"file":"static/js/860.45fe4c3b.chunk.js","mappings":"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","sources":["components/SEO/SEO.tsx","pages/Visualizations.tsx","../node_modules/@mui/icons-material/Info.js"],"sourcesContent":["import React from 'react';\nimport { Helmet } from 'react-helmet-async';\n\ninterface SEOProps {\n  title?: string;\n  description?: string;\n  keywords?: string;\n  ogImage?: string;\n  ogUrl?: string;\n}\n\nconst SEO: React.FC<SEOProps> = ({\n  title = 'Crab Age Prediction | Data Science Project',\n  description = 'Using physical characteristics to accurately predict the age of crabs through data science and machine learning',\n  keywords = 'crab age, machine learning, data science, age prediction, predictive modeling, data visualization',\n  ogImage = `${process.env.PUBLIC_URL}/assets/img/crabs-on-beach.png`,\n  ogUrl = 'https://jonx0037.github.io/DS_6306_Project',\n}) => {\n  return (\n    <Helmet>\n      {/* Basic metadata */}\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"keywords\" content={keywords} />\n      \n      {/* Open Graph (Facebook, LinkedIn) */}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={ogImage} />\n      <meta property=\"og:url\" content={ogUrl} />\n      <meta property=\"og:type\" content=\"website\" />\n      \n      {/* Twitter */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={ogImage} />\n      \n      {/* Canonical URL */}\n      <link rel=\"canonical\" href={ogUrl} />\n    </Helmet>\n  );\n};\n\nexport default SEO;","import { useState } from 'react';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  CardMedia,\n  Tabs,\n  Tab,\n  Dialog,\n  DialogContent,\n  IconButton,\n  Container,\n  Divider,\n  Paper,\n  Grid,\n  Button,\n  useTheme,\n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ZoomOutMapIcon from '@mui/icons-material/ZoomOutMap';\nimport InfoIcon from '@mui/icons-material/Info';\nimport SEO from '../components/SEO/SEO';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nconst TabPanel = (props: TabPanelProps) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`visualization-tabpanel-${index}`}\n      aria-labelledby={`visualization-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ p: { xs: 1, md: 3 } }}>{children}</Box>}\n    </div>\n  );\n};\n\ninterface VisualizationCardProps {\n  title: string;\n  description: string;\n  imagePath: string;\n  onExpand: () => void;\n}\n\nconst VisualizationCard = ({ title, description, imagePath, onExpand }: VisualizationCardProps) => {\n  const theme = useTheme();\n  \n  return (\n    <Card sx={{ \n      height: '100%', \n      display: 'flex', \n      flexDirection: 'column',\n      borderRadius: 2,\n      transition: 'transform 0.3s, box-shadow 0.3s',\n      '&:hover': {\n        transform: 'translateY(-8px)',\n        boxShadow: '0 8px 16px rgba(0,0,0,0.1)',\n      }\n    }}>\n      <Box sx={{ position: 'relative' }}>\n        <CardMedia\n          component=\"img\"\n          height=\"250\"\n          image={`${process.env.PUBLIC_URL}${imagePath}`}\n          alt={title}\n          sx={{ \n            objectFit: 'contain', \n            p: 2, \n            bgcolor: 'background.paper',\n            cursor: 'pointer'\n          }}\n          onClick={onExpand}\n        />\n        <IconButton\n          sx={{\n            position: 'absolute',\n            top: 8,\n            right: 8,\n            bgcolor: 'rgba(255, 255, 255, 0.8)',\n            color: theme.palette.primary.main,\n            '&:hover': { \n              bgcolor: 'rgba(255, 255, 255, 0.9)', \n              color: theme.palette.secondary.main \n            },\n            boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n          }}\n          onClick={onExpand}\n        >\n          <ZoomOutMapIcon />\n        </IconButton>\n      </Box>\n      <CardContent sx={{ flexGrow: 1 }}>\n        <Typography variant=\"h6\" gutterBottom sx={{ color: 'primary.main', fontWeight: 600 }}>\n          {title}\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {description}\n        </Typography>\n      </CardContent>\n      <Box sx={{ p: 2, display: 'flex', justifyContent: 'flex-end' }}>\n        <Button\n          startIcon={<InfoIcon />}\n          onClick={onExpand}\n          variant=\"text\"\n          color=\"primary\"\n          sx={{ textTransform: 'none' }}\n        >\n          View Details\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nconst visualizationCategories = [\n  {\n    category: 'Distribution Analysis',\n    items: [\n      {\n        title: 'Age Distribution',\n        description: 'Our analysis revealed a right-skewed distribution of crab ages, with most crabs clustering in the 8-13 year range. The distribution provides important context for model training and validation.',\n        imagePath: '/assets/plots/age_distribution.png'\n      },\n      {\n        title: 'Age by Sex',\n        description: 'Female and male crabs show distinct age distributions. Our data cleaning process identified and corrected measurement errors, such as zero values in Height and Diameter that required imputation based on age and sex groupings.',\n        imagePath: '/assets/plots/age_by_sex.png'\n      }\n    ]\n  },\n  {\n    category: 'Correlation Analysis',\n    items: [\n      {\n        title: 'Correlation Matrix',\n        description: 'Our correlation analysis identified exceptionally strong relationships between weight-based measurements and age. Shell weight (correlation > 0.7) emerged as the single strongest predictor, followed closely by overall weight.',\n        imagePath: '/assets/plots/correlation_matrix.png'\n      },\n      {\n        title: 'Feature Importance',\n        description: 'Random Forest feature importance analysis confirmed the critical role of weight measurements in predicting age. The ratio features we engineered, particularly weight-to-length ratios, ranked among the top predictors.',\n        imagePath: '/assets/plots/feature_importance.png'\n      }\n    ]\n  },\n  {\n    category: 'Physical Measurements',\n    items: [\n      {\n        title: 'Length vs Age',\n        description: 'While length shows a positive correlation with age (r=0.55), we observed a non-linear relationship with diminishing returns at higher ages. This pattern informed our decision to include polynomial terms in our feature engineering.',\n        imagePath: '/assets/plots/scatter_Length_vs_age.png'\n      },\n      {\n        title: 'Weight vs Age',\n        description: 'Weight demonstrates the strongest linear relationship with age (r=0.68), showing a consistent increase across the age spectrum. Our analysis revealed this to be one of the most reliable single predictors of crab age.',\n        imagePath: '/assets/plots/scatter_Weight_vs_age.png'\n      },\n      {\n        title: 'Height vs Age',\n        description: 'Our data cleaning process identified and corrected zero values in Height measurements that required age-specific imputation. After cleaning, height showed a moderate correlation (r=0.51) with age.',\n        imagePath: '/assets/plots/scatter_Height_vs_age.png'\n      },\n      {\n        title: 'Shell Weight vs Age',\n        description: 'Shell weight emerged as the single strongest predictor of crab age (r=0.72). Our feature engineering approach leveraged this strong relationship by creating ratio features between shell weight and other measurements.',\n        imagePath: '/assets/plots/scatter_Shell.Weight_vs_age.png'\n      }\n    ]\n  }\n];\n\nconst Visualizations = () => {\n  const [currentTab, setCurrentTab] = useState(0);\n  const [dialogImage, setDialogImage] = useState<string | null>(null);\n  const [dialogTitle, setDialogTitle] = useState<string>('');\n  const [dialogDescription, setDialogDescription] = useState<string>('');\n\n  const handleTabChange = (_event: React.SyntheticEvent, newValue: number) => {\n    setCurrentTab(newValue);\n  };\n  \n  const handleOpenDialog = (item: { title: string; description: string; imagePath: string }) => {\n    setDialogImage(`${process.env.PUBLIC_URL}${item.imagePath}`);\n    setDialogTitle(item.title);\n    setDialogDescription(item.description);\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      <SEO title=\"Data Visualizations\" description=\"Explore our data visualizations showing key relationships between crab physical characteristics and age.\" />\n      <Box sx={{ \n        mb: 6,\n        position: 'relative',\n        '&::after': {\n          content: '\"\"',\n          position: 'absolute',\n          right: { xs: -20, md: -50 },\n          top: { xs: -20, md: -30 },\n          width: { xs: 80, md: 120 },\n          height: { xs: 80, md: 120 },\n          backgroundImage: `url(${process.env.PUBLIC_URL}/assets/img/crab-on-beach.png)`,\n          backgroundSize: 'contain',\n          backgroundRepeat: 'no-repeat',\n          backgroundPosition: 'center',\n          opacity: 0.1,\n          zIndex: -1,\n          transform: 'rotate(15deg)'\n        }\n      }}>\n        <Typography \n          variant=\"h3\" \n          align=\"center\" \n          gutterBottom \n          sx={{ \n            color: 'primary.main', \n            fontWeight: 600,\n            mt: 2\n          }}\n        >\n          Data Visualizations\n        </Typography>\n        <Divider sx={{ width: '80px', mx: 'auto', borderColor: 'secondary.main', borderWidth: 2, mb: 3 }} />\n        <Typography variant=\"body1\" align=\"center\" sx={{ maxWidth: '800px', mx: 'auto' }}>\n          Explore our data visualizations showing key relationships between crab physical characteristics and age. \n          These visualizations helped guide our machine learning approach and revealed important insights about crab aging patterns.\n        </Typography>\n      </Box>\n\n      <Paper \n        elevation={2} \n        sx={{ \n          borderRadius: 2, \n          overflow: 'hidden', \n          mb: 4,\n          bgcolor: 'background.paper'\n        }}\n      >\n        <Tabs\n          value={currentTab}\n          onChange={handleTabChange}\n          variant=\"fullWidth\"\n          textColor=\"primary\"\n          indicatorColor=\"secondary\"\n          aria-label=\"visualization categories\"\n          sx={{ \n            borderBottom: 1, \n            borderColor: 'divider',\n            '& .MuiTab-root': {\n              fontWeight: 600,\n              fontSize: '1rem',\n              py: 2,\n              textTransform: 'none'\n            }\n          }}\n        >\n          {visualizationCategories.map((category, index) => (\n            <Tab key={index} label={category.category} />\n          ))}\n        </Tabs>\n\n        {visualizationCategories.map((category, index) => (\n          <TabPanel key={index} value={currentTab} index={index}>\n            <Grid container spacing={3}>\n              {category.items.map((item, itemIndex) => (\n                <Grid item key={itemIndex} xs={12} sm={6} md={category.items.length > 2 ? 6 : 6}>\n                  <VisualizationCard\n                    {...item}\n                    onExpand={() => handleOpenDialog(item)}\n                  />\n                </Grid>\n              ))}\n            </Grid>\n          </TabPanel>\n        ))}\n      </Paper>\n\n      <Box sx={{ \n        mt: 8, \n        mb: 4, \n        display: 'flex',\n        justifyContent: 'center',\n        position: 'relative',\n        '&::before': {\n          content: '\"\"',\n          position: 'absolute',\n          left: { xs: -30, md: -60 },\n          bottom: { xs: -20, md: -40 },\n          width: { xs: 90, md: 130 },\n          height: { xs: 90, md: 130 },\n          backgroundImage: `url(${process.env.PUBLIC_URL}/assets/img/red-orange-crab-on-beach.png)`,\n          backgroundSize: 'contain',\n          backgroundRepeat: 'no-repeat',\n          backgroundPosition: 'center',\n          opacity: 0.08,\n          zIndex: -1,\n          transform: 'rotate(-10deg)'\n        }\n      }}>\n        <Typography variant=\"body1\" align=\"center\" sx={{ \n          maxWidth: '700px',\n          px: 2,\n          py: 3,\n          borderRadius: 2,\n          backgroundColor: 'rgba(53, 76, 161, 0.05)',\n          border: '1px solid rgba(53, 76, 161, 0.1)',\n        }}>\n          These visualizations highlight the relationships between crab physical characteristics and age,\n          providing insights that guided our feature selection and modeling approach.\n          Click on any visualization for a more detailed view.\n        </Typography>\n      </Box>\n\n      <Dialog\n        open={!!dialogImage}\n        maxWidth=\"lg\"\n        fullWidth\n        onClose={() => setDialogImage(null)}\n        PaperProps={{\n          sx: {\n            borderRadius: 2,\n            overflow: 'hidden'\n          }\n        }}\n      >\n        <Box sx={{ \n          bgcolor: 'primary.main', \n          color: 'white', \n          p: 2,\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        }}>\n          <Typography variant=\"h6\">{dialogTitle}</Typography>\n          <IconButton\n            sx={{\n              color: 'white',\n            }}\n            onClick={() => setDialogImage(null)}\n          >\n            <CloseIcon />\n          </IconButton>\n        </Box>\n        <DialogContent sx={{ p: 3 }}>\n          {dialogImage && (\n            <>\n              <img\n                src={dialogImage}\n                alt={dialogTitle}\n                style={{\n                  width: '100%',\n                  height: 'auto',\n                  maxHeight: '70vh',\n                  objectFit: 'contain',\n                  marginBottom: '16px',\n                  boxShadow: '0 4px 8px rgba(0,0,0,0.1)'\n                }}\n              />\n              <Typography variant=\"body1\" sx={{ mt: 2 }}>\n                {dialogDescription}\n              </Typography>\n            </>\n          )}\n        </DialogContent>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default Visualizations;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m1 15h-2v-6h2zm0-8h-2V7h2z\"\n}), 'Info');"],"names":["_ref","title","description","keywords","ogImage","ogUrl","_jsxs","Helmet","children","_jsx","name","content","property","rel","href","TabPanel","props","value","index","other","role","hidden","id","Box","sx","p","xs","md","VisualizationCard","imagePath","onExpand","theme","useTheme","Card","height","display","flexDirection","borderRadius","transition","transform","boxShadow","position","CardMedia","component","image","alt","objectFit","bgcolor","cursor","onClick","IconButton","top","right","color","palette","primary","main","secondary","ZoomOutMapIcon","CardContent","flexGrow","Typography","variant","gutterBottom","fontWeight","justifyContent","Button","startIcon","InfoIcon","textTransform","visualizationCategories","category","items","Visualizations","currentTab","setCurrentTab","useState","dialogImage","setDialogImage","dialogTitle","setDialogTitle","dialogDescription","setDialogDescription","Container","maxWidth","SEO","mb","width","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","opacity","zIndex","align","mt","Divider","mx","borderColor","borderWidth","Paper","elevation","overflow","Tabs","onChange","handleTabChange","_event","newValue","textColor","indicatorColor","borderBottom","fontSize","py","map","Tab","label","Grid","container","spacing","item","itemIndex","sm","length","handleOpenDialog","left","bottom","px","backgroundColor","border","Dialog","open","fullWidth","onClose","PaperProps","alignItems","CloseIcon","DialogContent","_Fragment","src","style","maxHeight","marginBottom","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}