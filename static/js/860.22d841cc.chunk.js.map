{"version":3,"file":"static/js/860.22d841cc.chunk.js","mappings":"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","sources":["pages/Visualizations.tsx"],"sourcesContent":["import { useState } from 'react';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  CardMedia,\n  Tabs,\n  Tab,\n  Dialog,\n  DialogContent,\n  IconButton,\n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ZoomOutMapIcon from '@mui/icons-material/ZoomOutMap';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nconst TabPanel = (props: TabPanelProps) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`visualization-tabpanel-${index}`}\n      aria-labelledby={`visualization-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\n    </div>\n  );\n};\n\ninterface VisualizationCardProps {\n  title: string;\n  description: string;\n  imagePath: string;\n  onExpand: () => void;\n}\n\nconst VisualizationCard = ({ title, description, imagePath, onExpand }: VisualizationCardProps) => (\n  <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n    <Box sx={{ position: 'relative' }}>\n      <CardMedia\n        component=\"img\"\n        height=\"250\"\n        image={imagePath}\n        alt={title}\n        sx={{ objectFit: 'contain', p: 2, bgcolor: 'background.paper' }}\n      />\n      <IconButton\n        sx={{\n          position: 'absolute',\n          top: 8,\n          right: 8,\n          bgcolor: 'background.paper',\n          '&:hover': { bgcolor: 'background.default' },\n        }}\n        onClick={onExpand}\n      >\n        <ZoomOutMapIcon />\n      </IconButton>\n    </Box>\n    <CardContent>\n      <Typography variant=\"h6\" gutterBottom>\n        {title}\n      </Typography>\n      <Typography variant=\"body2\" color=\"text.secondary\">\n        {description}\n      </Typography>\n    </CardContent>\n  </Card>\n);\n\nconst visualizationCategories = [\n  {\n    category: 'Distribution Analysis',\n    items: [\n      {\n        title: 'Age Distribution',\n        description: 'Overall distribution of crab ages in the dataset.',\n        imagePath: '/output/plots/age_distribution.png'\n      },\n      {\n        title: 'Age by Sex',\n        description: 'Age distribution separated by crab sex.',\n        imagePath: '/output/plots/age_by_sex.png'\n      }\n    ]\n  },\n  {\n    category: 'Correlation Analysis',\n    items: [\n      {\n        title: 'Correlation Matrix',\n        description: 'Heatmap showing correlations between different measurements.',\n        imagePath: '/output/plots/correlation_matrix.png'\n      },\n      {\n        title: 'Feature Importance',\n        description: 'Relative importance of different features in predicting age.',\n        imagePath: '/output/plots/feature_importance.png'\n      }\n    ]\n  },\n  {\n    category: 'Physical Measurements',\n    items: [\n      {\n        title: 'Length vs Age',\n        description: 'Relationship between crab length and age.',\n        imagePath: '/output/plots/scatter_Length_vs_age.png'\n      },\n      {\n        title: 'Weight vs Age',\n        description: 'Relationship between crab weight and age.',\n        imagePath: '/output/plots/scatter_Weight_vs_age.png'\n      }\n    ]\n  }\n];\n\nconst Visualizations = () => {\n  const [currentTab, setCurrentTab] = useState(0);\n  const [dialogImage, setDialogImage] = useState<string | null>(null);\n\n  const handleTabChange = (_event: React.SyntheticEvent, newValue: number) => {\n    setCurrentTab(newValue);\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h2\" gutterBottom align=\"center\" sx={{ mb: 4 }}>\n        Visualizations\n      </Typography>\n\n      <Tabs\n        value={currentTab}\n        onChange={handleTabChange}\n        centered\n        textColor=\"primary\"\n        indicatorColor=\"primary\"\n        sx={{ mb: 4 }}\n      >\n        {visualizationCategories.map((category, index) => (\n          <Tab key={index} label={category.category} />\n        ))}\n      </Tabs>\n\n      {visualizationCategories.map((category, index) => (\n        <TabPanel key={index} value={currentTab} index={index}>\n          <Box sx={{ display: 'grid', gap: 4, gridTemplateColumns: 'repeat(12, 1fr)' }}>\n            {category.items.map((item, itemIndex) => (\n              <Box\n                key={itemIndex}\n                sx={{\n                  gridColumn: {\n                    xs: 'span 12',\n                    md: 'span 6'\n                  }\n                }}\n              >\n                <VisualizationCard\n                  {...item}\n                  onExpand={() => setDialogImage(item.imagePath)}\n                />\n              </Box>\n            ))}\n          </Box>\n        </TabPanel>\n      ))}\n\n      <Dialog\n        open={!!dialogImage}\n        maxWidth=\"lg\"\n        fullWidth\n        onClose={() => setDialogImage(null)}\n      >\n        <DialogContent sx={{ position: 'relative', p: 0 }}>\n          <IconButton\n            sx={{\n              position: 'absolute',\n              top: 8,\n              right: 8,\n              bgcolor: 'background.paper',\n              '&:hover': { bgcolor: 'background.default' },\n            }}\n            onClick={() => setDialogImage(null)}\n          >\n            <CloseIcon />\n          </IconButton>\n          {dialogImage && (\n            <img\n              src={dialogImage}\n              alt=\"Enlarged visualization\"\n              style={{\n                width: '100%',\n                height: 'auto',\n                maxHeight: '90vh',\n                objectFit: 'contain'\n              }}\n            />\n          )}\n        </DialogContent>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default Visualizations;"],"names":["TabPanel","props","children","value","index","other","_jsx","role","hidden","id","Box","sx","p","VisualizationCard","_ref","title","description","imagePath","onExpand","_jsxs","Card","height","display","flexDirection","position","CardMedia","component","image","alt","objectFit","bgcolor","IconButton","top","right","onClick","ZoomOutMapIcon","CardContent","Typography","variant","gutterBottom","color","visualizationCategories","category","items","Visualizations","currentTab","setCurrentTab","useState","dialogImage","setDialogImage","align","mb","Tabs","onChange","handleTabChange","_event","newValue","centered","textColor","indicatorColor","map","Tab","label","gap","gridTemplateColumns","item","itemIndex","gridColumn","xs","md","Dialog","open","maxWidth","fullWidth","onClose","DialogContent","CloseIcon","src","style","width","maxHeight"],"sourceRoot":""}