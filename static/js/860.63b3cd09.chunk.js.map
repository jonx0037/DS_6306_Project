{"version":3,"file":"static/js/860.63b3cd09.chunk.js","mappings":"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","sources":["pages/Visualizations.tsx","../node_modules/@mui/icons-material/Info.js"],"sourcesContent":["import { useState } from 'react';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  CardMedia,\n  Tabs,\n  Tab,\n  Dialog,\n  DialogContent,\n  IconButton,\n  Container,\n  Divider,\n  Paper,\n  Grid,\n  Button,\n  useTheme,\n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ZoomOutMapIcon from '@mui/icons-material/ZoomOutMap';\nimport InfoIcon from '@mui/icons-material/Info';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nconst TabPanel = (props: TabPanelProps) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`visualization-tabpanel-${index}`}\n      aria-labelledby={`visualization-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ p: { xs: 1, md: 3 } }}>{children}</Box>}\n    </div>\n  );\n};\n\ninterface VisualizationCardProps {\n  title: string;\n  description: string;\n  imagePath: string;\n  onExpand: () => void;\n}\n\nconst VisualizationCard = ({ title, description, imagePath, onExpand }: VisualizationCardProps) => {\n  const theme = useTheme();\n  \n  return (\n    <Card sx={{ \n      height: '100%', \n      display: 'flex', \n      flexDirection: 'column',\n      borderRadius: 2,\n      transition: 'transform 0.3s, box-shadow 0.3s',\n      '&:hover': {\n        transform: 'translateY(-8px)',\n        boxShadow: '0 8px 16px rgba(0,0,0,0.1)',\n      }\n    }}>\n      <Box sx={{ position: 'relative' }}>\n        <CardMedia\n          component=\"img\"\n          height=\"250\"\n          image={`${process.env.PUBLIC_URL}${imagePath}`}\n          alt={title}\n          sx={{ \n            objectFit: 'contain', \n            p: 2, \n            bgcolor: 'background.paper',\n            cursor: 'pointer'\n          }}\n          onClick={onExpand}\n        />\n        <IconButton\n          sx={{\n            position: 'absolute',\n            top: 8,\n            right: 8,\n            bgcolor: 'rgba(255, 255, 255, 0.8)',\n            color: theme.palette.primary.main,\n            '&:hover': { \n              bgcolor: 'rgba(255, 255, 255, 0.9)', \n              color: theme.palette.secondary.main \n            },\n            boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n          }}\n          onClick={onExpand}\n        >\n          <ZoomOutMapIcon />\n        </IconButton>\n      </Box>\n      <CardContent sx={{ flexGrow: 1 }}>\n        <Typography variant=\"h6\" gutterBottom sx={{ color: 'primary.main', fontWeight: 600 }}>\n          {title}\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {description}\n        </Typography>\n      </CardContent>\n      <Box sx={{ p: 2, display: 'flex', justifyContent: 'flex-end' }}>\n        <Button\n          startIcon={<InfoIcon />}\n          onClick={onExpand}\n          variant=\"text\"\n          color=\"primary\"\n          sx={{ textTransform: 'none' }}\n        >\n          View Details\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nconst visualizationCategories = [\n  {\n    category: 'Distribution Analysis',\n    items: [\n      {\n        title: 'Age Distribution',\n        description: 'Overall distribution of crab ages in the dataset, showing the frequency of different age groups across the sampled population.',\n        imagePath: '/assets/plots/age_distribution.png'\n      },\n      {\n        title: 'Age by Sex',\n        description: 'Age distribution separated by crab sex, highlighting potential differences in age patterns between male and female crabs.',\n        imagePath: '/assets/plots/age_by_sex.png'\n      }\n    ]\n  },\n  {\n    category: 'Correlation Analysis',\n    items: [\n      {\n        title: 'Correlation Matrix',\n        description: 'Heatmap showing correlations between different measurements, with stronger colors indicating stronger relationships between variables.',\n        imagePath: '/assets/plots/correlation_matrix.png'\n      },\n      {\n        title: 'Feature Importance',\n        description: 'Relative importance of different features in predicting age, based on our machine learning model analysis.',\n        imagePath: '/assets/plots/feature_importance.png'\n      }\n    ]\n  },\n  {\n    category: 'Physical Measurements',\n    items: [\n      {\n        title: 'Length vs Age',\n        description: 'Relationship between crab length and age, showing how this physical attribute correlates with the age of the crab.',\n        imagePath: '/assets/plots/scatter_Length_vs_age.png'\n      },\n      {\n        title: 'Weight vs Age',\n        description: 'Relationship between crab weight and age, demonstrating how weight increases with age across the crab population.',\n        imagePath: '/assets/plots/scatter_Weight_vs_age.png'\n      },\n      {\n        title: 'Height vs Age',\n        description: 'Analysis of how crab height relates to age, with trend lines showing the general pattern across the dataset.',\n        imagePath: '/assets/plots/scatter_Height_vs_age.png'\n      },\n      {\n        title: 'Shell Weight vs Age',\n        description: 'Examination of the relationship between shell weight and crab age, an important predictor in our models.',\n        imagePath: '/assets/plots/scatter_Shell.Weight_vs_age.png'\n      }\n    ]\n  }\n];\n\nconst Visualizations = () => {\n  const [currentTab, setCurrentTab] = useState(0);\n  const [dialogImage, setDialogImage] = useState<string | null>(null);\n  const [dialogTitle, setDialogTitle] = useState<string>('');\n  const [dialogDescription, setDialogDescription] = useState<string>('');\n\n  const handleTabChange = (_event: React.SyntheticEvent, newValue: number) => {\n    setCurrentTab(newValue);\n  };\n  \n  const handleOpenDialog = (item: { title: string; description: string; imagePath: string }) => {\n    setDialogImage(`${process.env.PUBLIC_URL}${item.imagePath}`);\n    setDialogTitle(item.title);\n    setDialogDescription(item.description);\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ \n        mb: 6,\n        position: 'relative',\n        '&::after': {\n          content: '\"\"',\n          position: 'absolute',\n          right: { xs: -20, md: -50 },\n          top: { xs: -20, md: -30 },\n          width: { xs: 80, md: 120 },\n          height: { xs: 80, md: 120 },\n          backgroundImage: `url(${process.env.PUBLIC_URL}/assets/img/crab-on-beach.png)`,\n          backgroundSize: 'contain',\n          backgroundRepeat: 'no-repeat',\n          backgroundPosition: 'center',\n          opacity: 0.1,\n          zIndex: -1,\n          transform: 'rotate(15deg)'\n        }\n      }}>\n        <Typography \n          variant=\"h3\" \n          align=\"center\" \n          gutterBottom \n          sx={{ \n            color: 'primary.main', \n            fontWeight: 600,\n            mt: 2\n          }}\n        >\n          Data Visualizations\n        </Typography>\n        <Divider sx={{ width: '80px', mx: 'auto', borderColor: 'secondary.main', borderWidth: 2, mb: 3 }} />\n        <Typography variant=\"body1\" align=\"center\" sx={{ maxWidth: '800px', mx: 'auto' }}>\n          Explore our data visualizations showing key relationships between crab physical characteristics and age. \n          These visualizations helped guide our machine learning approach and revealed important insights about crab aging patterns.\n        </Typography>\n      </Box>\n\n      <Paper \n        elevation={2} \n        sx={{ \n          borderRadius: 2, \n          overflow: 'hidden', \n          mb: 4,\n          bgcolor: 'background.paper'\n        }}\n      >\n        <Tabs\n          value={currentTab}\n          onChange={handleTabChange}\n          variant=\"fullWidth\"\n          textColor=\"primary\"\n          indicatorColor=\"secondary\"\n          aria-label=\"visualization categories\"\n          sx={{ \n            borderBottom: 1, \n            borderColor: 'divider',\n            '& .MuiTab-root': {\n              fontWeight: 600,\n              fontSize: '1rem',\n              py: 2,\n              textTransform: 'none'\n            }\n          }}\n        >\n          {visualizationCategories.map((category, index) => (\n            <Tab key={index} label={category.category} />\n          ))}\n        </Tabs>\n\n        {visualizationCategories.map((category, index) => (\n          <TabPanel key={index} value={currentTab} index={index}>\n            <Grid container spacing={3}>\n              {category.items.map((item, itemIndex) => (\n                <Grid item key={itemIndex} xs={12} sm={6} md={category.items.length > 2 ? 6 : 6}>\n                  <VisualizationCard\n                    {...item}\n                    onExpand={() => handleOpenDialog(item)}\n                  />\n                </Grid>\n              ))}\n            </Grid>\n          </TabPanel>\n        ))}\n      </Paper>\n\n      <Box sx={{ \n        mt: 8, \n        mb: 4, \n        display: 'flex',\n        justifyContent: 'center',\n        position: 'relative',\n        '&::before': {\n          content: '\"\"',\n          position: 'absolute',\n          left: { xs: -30, md: -60 },\n          bottom: { xs: -20, md: -40 },\n          width: { xs: 90, md: 130 },\n          height: { xs: 90, md: 130 },\n          backgroundImage: `url(${process.env.PUBLIC_URL}/assets/img/red-orange-crab-on-beach.png)`,\n          backgroundSize: 'contain',\n          backgroundRepeat: 'no-repeat',\n          backgroundPosition: 'center',\n          opacity: 0.08,\n          zIndex: -1,\n          transform: 'rotate(-10deg)'\n        }\n      }}>\n        <Typography variant=\"body1\" align=\"center\" sx={{ \n          maxWidth: '700px',\n          px: 2,\n          py: 3,\n          borderRadius: 2,\n          backgroundColor: 'rgba(53, 76, 161, 0.05)',\n          border: '1px solid rgba(53, 76, 161, 0.1)',\n        }}>\n          These visualizations highlight the relationships between crab physical characteristics and age,\n          providing insights that guided our feature selection and modeling approach.\n          Click on any visualization for a more detailed view.\n        </Typography>\n      </Box>\n\n      <Dialog\n        open={!!dialogImage}\n        maxWidth=\"lg\"\n        fullWidth\n        onClose={() => setDialogImage(null)}\n        PaperProps={{\n          sx: {\n            borderRadius: 2,\n            overflow: 'hidden'\n          }\n        }}\n      >\n        <Box sx={{ \n          bgcolor: 'primary.main', \n          color: 'white', \n          p: 2,\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        }}>\n          <Typography variant=\"h6\">{dialogTitle}</Typography>\n          <IconButton\n            sx={{\n              color: 'white',\n            }}\n            onClick={() => setDialogImage(null)}\n          >\n            <CloseIcon />\n          </IconButton>\n        </Box>\n        <DialogContent sx={{ p: 3 }}>\n          {dialogImage && (\n            <>\n              <img\n                src={dialogImage}\n                alt={dialogTitle}\n                style={{\n                  width: '100%',\n                  height: 'auto',\n                  maxHeight: '70vh',\n                  objectFit: 'contain',\n                  marginBottom: '16px',\n                  boxShadow: '0 4px 8px rgba(0,0,0,0.1)'\n                }}\n              />\n              <Typography variant=\"body1\" sx={{ mt: 2 }}>\n                {dialogDescription}\n              </Typography>\n            </>\n          )}\n        </DialogContent>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default Visualizations;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m1 15h-2v-6h2zm0-8h-2V7h2z\"\n}), 'Info');"],"names":["TabPanel","props","children","value","index","other","_jsx","role","hidden","id","Box","sx","p","xs","md","VisualizationCard","_ref","title","description","imagePath","onExpand","theme","useTheme","_jsxs","Card","height","display","flexDirection","borderRadius","transition","transform","boxShadow","position","CardMedia","component","image","alt","objectFit","bgcolor","cursor","onClick","IconButton","top","right","color","palette","primary","main","secondary","ZoomOutMapIcon","CardContent","flexGrow","Typography","variant","gutterBottom","fontWeight","justifyContent","Button","startIcon","InfoIcon","textTransform","visualizationCategories","category","items","Visualizations","currentTab","setCurrentTab","useState","dialogImage","setDialogImage","dialogTitle","setDialogTitle","dialogDescription","setDialogDescription","Container","maxWidth","mb","content","width","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","opacity","zIndex","align","mt","Divider","mx","borderColor","borderWidth","Paper","elevation","overflow","Tabs","onChange","handleTabChange","_event","newValue","textColor","indicatorColor","borderBottom","fontSize","py","map","Tab","label","Grid","container","spacing","item","itemIndex","sm","length","handleOpenDialog","left","bottom","px","backgroundColor","border","Dialog","open","fullWidth","onClose","PaperProps","alignItems","CloseIcon","DialogContent","_Fragment","src","style","maxHeight","marginBottom","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}