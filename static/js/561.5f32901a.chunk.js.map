{"version":3,"file":"static/js/561.5f32901a.chunk.js","mappings":"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","sources":["pages/Analysis.tsx"],"sourcesContent":["import { Box, Typography, Card, CardContent, CardMedia, Grid, Container, Divider, Button } from '@mui/material';\nimport ZoomOutMapIcon from '@mui/icons-material/ZoomOutMap';\nimport { useState } from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\ninterface AnalysisCardProps {\n  title: string;\n  description: string;\n  imagePath: string;\n  onExpand: () => void;\n}\n\nconst AnalysisCard = ({ title, description, imagePath, onExpand }: AnalysisCardProps) => (\n  <Card sx={{ \n    height: '100%', \n    display: 'flex', \n    flexDirection: 'column',\n    borderRadius: 2,\n    transition: 'transform 0.3s, box-shadow 0.3s',\n    '&:hover': {\n      transform: 'translateY(-8px)',\n      boxShadow: '0 8px 16px rgba(0,0,0,0.1)',\n    }\n  }}>\n    <Box sx={{ position: 'relative' }}>\n      <CardMedia\n        component=\"img\"\n        height=\"200\"\n        image={`${process.env.PUBLIC_URL}${imagePath}`}\n        alt={title}\n        sx={{ \n          objectFit: 'contain', \n          p: 2, \n          bgcolor: 'background.paper',\n          cursor: 'pointer'\n        }}\n        onClick={onExpand}\n      />\n      <IconButton\n        sx={{\n          position: 'absolute',\n          top: 8,\n          right: 8,\n          bgcolor: 'rgba(255, 255, 255, 0.8)',\n          color: 'primary.main',\n          '&:hover': { \n            bgcolor: 'rgba(255, 255, 255, 0.9)', \n            color: 'secondary.main' \n          },\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n        }}\n        onClick={onExpand}\n      >\n        <ZoomOutMapIcon />\n      </IconButton>\n    </Box>\n    <CardContent sx={{ flexGrow: 1 }}>\n      <Typography variant=\"h6\" gutterBottom sx={{ color: 'primary.main', fontWeight: 600 }}>\n        {title}\n      </Typography>\n      <Typography variant=\"body2\" color=\"text.secondary\">\n        {description}\n      </Typography>\n    </CardContent>\n    <Box sx={{ p: 2, display: 'flex', justifyContent: 'flex-end' }}>\n      <Button\n        startIcon={<ZoomOutMapIcon />}\n        onClick={onExpand}\n        variant=\"text\"\n        color=\"primary\"\n        sx={{ textTransform: 'none' }}\n      >\n        View Larger\n      </Button>\n    </Box>\n  </Card>\n);\n\nconst analysisData = [\n  {\n    title: 'Age Distribution',\n    description: 'Distribution of crab ages in the dataset shows clustering around certain age groups. This helps us understand the natural age patterns in the crab population.',\n    imagePath: '/assets/plots/age_distribution.png'\n  },\n  {\n    title: 'Age by Sex',\n    description: 'Analysis of age patterns across different crab sexes reveals interesting variations. Female and male crabs show distinct growth and aging characteristics.',\n    imagePath: '/assets/plots/age_by_sex.png'\n  },\n  {\n    title: 'Correlation Matrix',\n    description: 'Visualization of relationships between different physical measurements. Strong correlations indicate which features will be most predictive for our models.',\n    imagePath: '/assets/plots/correlation_matrix.png'\n  },\n  {\n    title: 'Feature Importance',\n    description: 'Key physical characteristics that best predict crab age. Weight and shell dimensions emerged as the most important predictors in our analysis.',\n    imagePath: '/assets/plots/feature_importance.png'\n  }\n];\n\nconst Analysis = () => {\n  const [dialogImage, setDialogImage] = useState<string | null>(null);\n  const [dialogTitle, setDialogTitle] = useState<string>('');\n  const [dialogDescription, setDialogDescription] = useState<string>('');\n\n  const handleOpenDialog = (item: { title: string; description: string; imagePath: string }) => {\n    setDialogImage(`${process.env.PUBLIC_URL}${item.imagePath}`);\n    setDialogTitle(item.title);\n    setDialogDescription(item.description);\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ mb: 6 }}>\n        <Typography \n          variant=\"h3\" \n          align=\"center\" \n          gutterBottom \n          sx={{ \n            color: 'primary.main', \n            fontWeight: 600,\n            mt: 2\n          }}\n        >\n          Data Analysis\n        </Typography>\n        \n        <Divider sx={{ width: '80px', mx: 'auto', borderColor: 'secondary.main', borderWidth: 2, mb: 3 }} />\n        \n        <Typography variant=\"body1\" sx={{ mb: 4 }} align=\"center\" maxWidth=\"800px\" mx=\"auto\">\n          Our analysis explores the relationships between various physical characteristics\n          of crabs and their age, identifying key patterns and correlations that inform\n          our prediction models.\n        </Typography>\n      </Box>\n\n      <Grid container spacing={4}>\n        {analysisData.map((item, index) => (\n          <Grid item key={index} xs={12} md={6}>\n            <AnalysisCard\n              title={item.title}\n              description={item.description}\n              imagePath={item.imagePath}\n              onExpand={() => handleOpenDialog(item)}\n            />\n          </Grid>\n        ))}\n      </Grid>\n\n      <Box sx={{ mt: 8, mb: 4 }}>\n        <Typography variant=\"h4\" gutterBottom color=\"primary.main\" fontWeight={600}>\n          Key Findings\n        </Typography>\n        <Divider sx={{ width: '60px', borderColor: 'secondary.main', borderWidth: 2, mb: 3 }} />\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} md={6}>\n            <Card sx={{ \n              height: '100%',\n              borderRadius: 2,\n              boxShadow: '0 4px 8px rgba(0,0,0,0.05)',\n              transition: 'transform 0.2s ease-in-out',\n              '&:hover': {\n                transform: 'translateY(-4px)',\n                boxShadow: '0 6px 12px rgba(0,0,0,0.1)',\n              }\n            }}>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom color=\"primary.main\" fontWeight={600}>\n                  Physical Measurements\n                </Typography>\n                <Typography variant=\"body2\" paragraph>\n                  Strong correlations were found between crab age and physical measurements,\n                  particularly with shell weight and diameter. These relationships form the\n                  foundation of our prediction models. Weight-related measurements showed the\n                  highest correlation coefficients, indicating they are reliable predictors of age.\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          \n          <Grid item xs={12} md={6}>\n            <Card sx={{ \n              height: '100%',\n              borderRadius: 2,\n              boxShadow: '0 4px 8px rgba(0,0,0,0.05)',\n              transition: 'transform 0.2s ease-in-out',\n              '&:hover': {\n                transform: 'translateY(-4px)',\n                boxShadow: '0 6px 12px rgba(0,0,0,0.1)',\n              }\n            }}>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom color=\"primary.main\" fontWeight={600}>\n                  Sex-Based Variations\n                </Typography>\n                <Typography variant=\"body2\" paragraph>\n                  Notable differences in age-related characteristics were observed between\n                  male and female crabs, suggesting sex-specific growth patterns. Female crabs\n                  showed different weight-to-age relationships compared to males, which was\n                  incorporated into our prediction models to improve accuracy.\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Box>\n      \n      <Dialog\n        open={!!dialogImage}\n        maxWidth=\"lg\"\n        fullWidth\n        onClose={() => setDialogImage(null)}\n        PaperProps={{\n          sx: {\n            borderRadius: 2,\n            overflow: 'hidden'\n          }\n        }}\n      >\n        <Box sx={{ \n          bgcolor: 'primary.main', \n          color: 'white', \n          p: 2,\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        }}>\n          <Typography variant=\"h6\">{dialogTitle}</Typography>\n          <IconButton\n            sx={{\n              color: 'white',\n            }}\n            onClick={() => setDialogImage(null)}\n          >\n            <CloseIcon />\n          </IconButton>\n        </Box>\n        <DialogContent sx={{ p: 3 }}>\n          {dialogImage && (\n            <>\n              <img\n                src={dialogImage}\n                alt={dialogTitle}\n                style={{\n                  width: '100%',\n                  height: 'auto',\n                  maxHeight: '70vh',\n                  objectFit: 'contain',\n                  marginBottom: '16px',\n                  boxShadow: '0 4px 8px rgba(0,0,0,0.1)'\n                }}\n              />\n              <Typography variant=\"body1\" sx={{ mt: 2 }}>\n                {dialogDescription}\n              </Typography>\n            </>\n          )}\n        </DialogContent>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default Analysis;"],"names":["AnalysisCard","_ref","title","description","imagePath","onExpand","_jsxs","Card","sx","height","display","flexDirection","borderRadius","transition","transform","boxShadow","children","Box","position","_jsx","CardMedia","component","image","alt","objectFit","p","bgcolor","cursor","onClick","IconButton","top","right","color","ZoomOutMapIcon","CardContent","flexGrow","Typography","variant","gutterBottom","fontWeight","justifyContent","Button","startIcon","textTransform","analysisData","Analysis","dialogImage","setDialogImage","useState","dialogTitle","setDialogTitle","dialogDescription","setDialogDescription","Container","maxWidth","mb","align","mt","Divider","width","mx","borderColor","borderWidth","Grid","container","spacing","map","item","index","xs","md","handleOpenDialog","paragraph","Dialog","open","fullWidth","onClose","PaperProps","overflow","alignItems","CloseIcon","DialogContent","_Fragment","src","style","maxHeight","marginBottom"],"sourceRoot":""}