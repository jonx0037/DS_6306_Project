{"version":3,"file":"static/js/561.aa84ee9f.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/CardMedia/cardMediaClasses.js","../node_modules/@mui/material/CardMedia/CardMedia.js","pages/Analysis.tsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"image\", \"src\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getCardMediaUtilityClass } from './cardMediaClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center'\n}, ownerState.isMediaComponent && {\n  width: '100%'\n}, ownerState.isImageComponent && {\n  // ⚠️ object-fit is not supported by IE11.\n  objectFit: 'cover'\n}));\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      image,\n      src,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;\n  const composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: `url(\"${image}\")`\n  }, style) : style;\n  const ownerState = _extends({}, props, {\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'img' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardMedia;","import React from 'react';\nimport { Box, Typography, Card, CardContent, CardMedia } from '@mui/material';\n\n// Use the PUBLIC_URL for GitHub Pages compatibility\nconst baseUrl = process.env.PUBLIC_URL || '';\n\n// Define image paths with the PUBLIC_URL prefix\nconst ageDistributionImage = `${baseUrl}/output/plots/age_distribution.png`;\nconst ageBySexImage = `${baseUrl}/output/plots/age_by_sex.png`;\nconst correlationMatrixImage = `${baseUrl}/output/plots/correlation_matrix.png`;\nconst featureImportanceImage = `${baseUrl}/output/plots/feature_importance.png`;\n\ninterface AnalysisCardProps {\n  title: string;\n  description: string;\n  imagePath: any; // Using any for imported image type\n}\n\nconst AnalysisCard: React.FC<AnalysisCardProps> = ({ title, description, imagePath }) => (\n  <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n    <CardMedia\n      component=\"img\"\n      height=\"200\"\n      image={imagePath}\n      alt={title}\n      sx={{ objectFit: 'contain', p: 2, bgcolor: 'background.paper' }}\n    />\n    <CardContent>\n      <Typography variant=\"h6\" gutterBottom>\n        {title}\n      </Typography>\n      <Typography variant=\"body2\" color=\"text.secondary\">\n        {description}\n      </Typography>\n    </CardContent>\n  </Card>\n);\n\nconst analysisData = [\n  {\n    title: 'Age Distribution',\n    description: 'Distribution of crab ages in the dataset shows clustering around certain age groups.',\n    imagePath: ageDistributionImage\n  },\n  {\n    title: 'Age by Sex',\n    description: 'Analysis of age patterns across different crab sexes reveals interesting variations.',\n    imagePath: ageBySexImage\n  },\n  {\n    title: 'Correlation Matrix',\n    description: 'Visualization of relationships between different physical measurements.',\n    imagePath: correlationMatrixImage\n  },\n  {\n    title: 'Feature Importance',\n    description: 'Key physical characteristics that best predict crab age.',\n    imagePath: featureImportanceImage\n  }\n];\n\nconst Analysis: React.FC = () => {\n  return (\n    <Box>\n      <Typography variant=\"h2\" gutterBottom align=\"center\" sx={{ mb: 4 }}>\n        Data Analysis\n      </Typography>\n      \n      <Typography variant=\"body1\" sx={{ mb: 4 }} align=\"center\">\n        Our analysis explores the relationships between various physical characteristics\n        of crabs and their age, identifying key patterns and correlations that inform\n        our prediction models.\n      </Typography>\n\n      <Box sx={{ display: 'grid', gap: 4, gridTemplateColumns: 'repeat(12, 1fr)' }}>\n        {analysisData.map((item, index) => (\n          <Box \n            key={index}\n            sx={{ \n              gridColumn: { \n                xs: 'span 12', \n                md: 'span 6', \n                lg: 'span 6' \n              } \n            }}\n          >\n            <AnalysisCard\n              title={item.title}\n              description={item.description}\n              imagePath={item.imagePath}\n            />\n          </Box>\n        ))}\n      </Box>\n\n      <Typography variant=\"h4\" sx={{ mt: 6, mb: 3 }}>\n        Key Findings\n      </Typography>\n      \n      <Box sx={{ display: 'grid', gap: 3, gridTemplateColumns: 'repeat(12, 1fr)' }}>\n        <Box sx={{ gridColumn: 'span 12' }}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Physical Measurements\n              </Typography>\n              <Typography variant=\"body2\" paragraph>\n                Strong correlations were found between crab age and physical measurements,\n                particularly with shell weight and diameter. These relationships form the\n                foundation of our prediction models.\n              </Typography>\n            </CardContent>\n          </Card>\n        </Box>\n        \n        <Box sx={{ gridColumn: 'span 12' }}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Sex-Based Variations\n              </Typography>\n              <Typography variant=\"body2\" paragraph>\n                Notable differences in age-related characteristics were observed between\n                male and female crabs, suggesting sex-specific growth patterns.\n              </Typography>\n            </CardContent>\n          </Card>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Analysis;"],"names":["getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","React","inProps","ref","useDefaultProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","component","as","getCardMediaUtilityClass","CardMediaRoot","isMediaComponent","isImageComponent","media","img","_ref","display","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","children","image","src","style","indexOf","composedStyle","backgroundImage","slots","role","baseUrl","process","AnalysisCard","title","description","imagePath","_jsxs","Card","sx","height","flexDirection","CardMedia","alt","p","bgcolor","CardContent","Typography","variant","gutterBottom","color","analysisData","Analysis","Box","align","mb","gap","gridTemplateColumns","map","item","index","gridColumn","xs","md","lg","mt","paragraph"],"sourceRoot":""}