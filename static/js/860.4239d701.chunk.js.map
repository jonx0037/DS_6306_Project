{"version":3,"file":"static/js/860.4239d701.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/CardMedia/cardMediaClasses.js","../node_modules/@mui/material/CardMedia/CardMedia.js","pages/Visualizations.tsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"image\", \"src\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getCardMediaUtilityClass } from './cardMediaClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center'\n}, ownerState.isMediaComponent && {\n  width: '100%'\n}, ownerState.isImageComponent && {\n  // ⚠️ object-fit is not supported by IE11.\n  objectFit: 'cover'\n}));\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      image,\n      src,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;\n  const composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: `url(\"${image}\")`\n  }, style) : style;\n  const ownerState = _extends({}, props, {\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'img' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardMedia;","import React, { useState } from 'react';\nimport { Box, Typography, Card, CardContent, CardMedia, Grid, Tabs, Tab } from '@mui/material';\n\n// Use the PUBLIC_URL for GitHub Pages compatibility\nconst baseUrl = process.env.PUBLIC_URL || '';\n\n// Define image paths for scatter plots\nconst scatterDiameterAge = `${baseUrl}/output/plots/scatter_Diameter_vs_age.png`;\nconst scatterDiameterAgeBySex = `${baseUrl}/output/plots/scatter_Diameter_vs_age_by_sex.png`;\nconst scatterHeightAge = `${baseUrl}/output/plots/scatter_Height_vs_age.png`;\nconst scatterHeightAgeBySex = `${baseUrl}/output/plots/scatter_Height_vs_age_by_sex.png`;\nconst scatterLengthAge = `${baseUrl}/output/plots/scatter_Length_vs_age.png`;\nconst scatterLengthAgeBySex = `${baseUrl}/output/plots/scatter_Length_vs_age_by_sex.png`;\nconst scatterWeightAge = `${baseUrl}/output/plots/scatter_Weight_vs_age.png`;\nconst scatterWeightAgeBySex = `${baseUrl}/output/plots/scatter_Weight_vs_age_by_sex.png`;\nconst scatterShellWeightAge = `${baseUrl}/output/plots/scatter_Shell.Weight_vs_age.png`;\nconst scatterShuckedWeightAge = `${baseUrl}/output/plots/scatter_Shucked.Weight_vs_age.png`;\nconst scatterVisceraWeightAge = `${baseUrl}/output/plots/scatter_Viscera.Weight_vs_age.png`;\n\n// Define image paths for other visualizations\nconst correlationMatrix = `${baseUrl}/output/plots/correlation_matrix.png`;\nconst boxplots = `${baseUrl}/output/plots/boxplots_numerical_variables.png`;\nconst pairPlot = `${baseUrl}/output/plots/pair_plot_key_variables.png`;\nconst featureImportance = `${baseUrl}/output/plots/feature_importance.png`;\nconst predictionVsActual = `${baseUrl}/output/plots/prediction_vs_actual.png`;\nconst residualPlot = `${baseUrl}/output/plots/residual_plot.png`;\nconst residualHistogram = `${baseUrl}/output/plots/residual_histogram.png`;\nconst predictionDistribution = `${baseUrl}/output/plots/prediction_distribution.png`;\n\n// Define interfaces\ninterface VisualizationItem {\n  title: string;\n  description: string;\n  image: string;\n}\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\n// Tab Panel component\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`visualization-tabpanel-${index}`}\n      aria-labelledby={`visualization-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\n// Visualization Card component\nconst VisualizationCard: React.FC<VisualizationItem> = ({ title, description, image }) => (\n  <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n    <CardMedia\n      component=\"img\"\n      height=\"250\"\n      image={image}\n      alt={title}\n      sx={{ objectFit: 'contain', p: 2, bgcolor: 'background.paper' }}\n    />\n    <CardContent>\n      <Typography variant=\"h6\" gutterBottom>\n        {title}\n      </Typography>\n      <Typography variant=\"body2\" color=\"text.secondary\">\n        {description}\n      </Typography>\n    </CardContent>\n  </Card>\n);\n\n// Main component\nconst Visualizations: React.FC = () => {\n  const [tabValue, setTabValue] = useState(0);\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setTabValue(newValue);\n  };\n\n  // Organize visualizations by category\n  const scatterPlots: VisualizationItem[] = [\n    {\n      title: 'Diameter vs Age',\n      description: 'Relationship between crab shell diameter and age.',\n      image: scatterDiameterAge\n    },\n    {\n      title: 'Diameter vs Age by Sex',\n      description: 'How diameter correlates with age across different sexes.',\n      image: scatterDiameterAgeBySex\n    },\n    {\n      title: 'Height vs Age',\n      description: 'Relationship between crab height and age.',\n      image: scatterHeightAge\n    },\n    {\n      title: 'Height vs Age by Sex',\n      description: 'How height correlates with age across different sexes.',\n      image: scatterHeightAgeBySex\n    },\n    {\n      title: 'Length vs Age',\n      description: 'Relationship between crab length and age.',\n      image: scatterLengthAge\n    },\n    {\n      title: 'Length vs Age by Sex',\n      description: 'How length correlates with age across different sexes.',\n      image: scatterLengthAgeBySex\n    },\n    {\n      title: 'Weight vs Age',\n      description: 'Relationship between crab weight and age.',\n      image: scatterWeightAge\n    },\n    {\n      title: 'Weight vs Age by Sex',\n      description: 'How weight correlates with age across different sexes.',\n      image: scatterWeightAgeBySex\n    },\n    {\n      title: 'Shell Weight vs Age',\n      description: 'Relationship between shell weight and age.',\n      image: scatterShellWeightAge\n    },\n    {\n      title: 'Shucked Weight vs Age',\n      description: 'Relationship between shucked weight and age.',\n      image: scatterShuckedWeightAge\n    },\n    {\n      title: 'Viscera Weight vs Age',\n      description: 'Relationship between viscera weight and age.',\n      image: scatterVisceraWeightAge\n    }\n  ];\n\n  const exploratoryPlots: VisualizationItem[] = [\n    {\n      title: 'Correlation Matrix',\n      description: 'Heat map showing correlations between all variables in the dataset.',\n      image: correlationMatrix\n    },\n    {\n      title: 'Boxplots of Numerical Variables',\n      description: 'Distribution of key numerical variables shown as boxplots.',\n      image: boxplots\n    },\n    {\n      title: 'Pair Plot of Key Variables',\n      description: 'Matrix of scatter plots showing relationships between key variables.',\n      image: pairPlot\n    },\n    {\n      title: 'Feature Importance',\n      description: 'Relative importance of each feature in predicting crab age.',\n      image: featureImportance\n    }\n  ];\n\n  const modelEvaluationPlots: VisualizationItem[] = [\n    {\n      title: 'Prediction vs Actual',\n      description: 'Comparison of model predictions against actual crab ages.',\n      image: predictionVsActual\n    },\n    {\n      title: 'Residual Plot',\n      description: 'Plot of prediction errors (residuals) against predicted values.',\n      image: residualPlot\n    },\n    {\n      title: 'Residual Histogram',\n      description: 'Distribution of prediction errors to evaluate model bias.',\n      image: residualHistogram\n    },\n    {\n      title: 'Prediction Distribution',\n      description: 'Distribution of predicted ages compared to actual ages.',\n      image: predictionDistribution\n    }\n  ];\n\n  return (\n    <Box>\n      <Typography variant=\"h2\" gutterBottom align=\"center\" sx={{ mb: 4 }}>\n        Visualizations\n      </Typography>\n      \n      <Typography variant=\"body1\" paragraph align=\"center\" sx={{ mb: 4 }}>\n        Explore the relationships between crab physical characteristics and age through various\n        visualization techniques. These visualizations help us understand patterns in the data\n        and evaluate our prediction models.\n      </Typography>\n\n      <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\n        <Tabs \n          value={tabValue} \n          onChange={handleTabChange} \n          centered\n          textColor=\"primary\"\n          indicatorColor=\"primary\"\n        >\n          <Tab label=\"Scatter Plots\" />\n          <Tab label=\"Exploratory Analysis\" />\n          <Tab label=\"Model Evaluation\" />\n        </Tabs>\n      </Box>\n\n      <TabPanel value={tabValue} index={0}>\n        <Grid container spacing={3}>\n          {scatterPlots.map((item, index) => (\n            <Grid item xs={12} md={6} lg={4} key={index}>\n              <VisualizationCard\n                title={item.title}\n                description={item.description}\n                image={item.image}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </TabPanel>\n\n      <TabPanel value={tabValue} index={1}>\n        <Grid container spacing={3}>\n          {exploratoryPlots.map((item, index) => (\n            <Grid item xs={12} md={6} key={index}>\n              <VisualizationCard\n                title={item.title}\n                description={item.description}\n                image={item.image}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </TabPanel>\n\n      <TabPanel value={tabValue} index={2}>\n        <Grid container spacing={3}>\n          {modelEvaluationPlots.map((item, index) => (\n            <Grid item xs={12} md={6} key={index}>\n              <VisualizationCard\n                title={item.title}\n                description={item.description}\n                image={item.image}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </TabPanel>\n    </Box>\n  );\n};\n\nexport default Visualizations;"],"names":["getCardMediaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardMediaRoot","styled","name","overridesResolver","props","styles","ownerState","isMediaComponent","isImageComponent","root","media","img","_ref","_extends","display","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","React","inProps","ref","useDefaultProps","children","className","component","image","src","style","other","_objectWithoutPropertiesLoose","indexOf","composedStyle","backgroundImage","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","as","role","undefined","baseUrl","process","scatterDiameterAge","scatterDiameterAgeBySex","scatterHeightAge","scatterHeightAgeBySex","scatterLengthAge","scatterLengthAgeBySex","scatterWeightAge","scatterWeightAgeBySex","scatterShellWeightAge","scatterShuckedWeightAge","scatterVisceraWeightAge","correlationMatrix","boxplots","pairPlot","featureImportance","predictionVsActual","residualPlot","residualHistogram","predictionDistribution","TabPanel","value","index","hidden","id","Box","sx","p","VisualizationCard","title","description","_jsxs","Card","height","flexDirection","CardMedia","alt","bgcolor","CardContent","Typography","variant","gutterBottom","color","Visualizations","tabValue","setTabValue","useState","scatterPlots","exploratoryPlots","modelEvaluationPlots","align","mb","paragraph","borderBottom","borderColor","Tabs","onChange","handleTabChange","event","newValue","centered","textColor","indicatorColor","Tab","label","Grid","container","spacing","map","item","xs","md","lg"],"sourceRoot":""}