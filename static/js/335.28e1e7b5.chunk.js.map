{"version":3,"file":"static/js/335.28e1e7b5.chunk.js","mappings":"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","sources":["components/ImageModal.tsx","pages/Visualizations.tsx","../node_modules/@mui/icons-material/Close.js"],"sourcesContent":["import React from 'react';\nimport { Modal, Box } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\ninterface ImageModalProps {\n  open: boolean;\n  onClose: () => void;\n  imageSrc: string;\n  imageAlt: string;\n}\n\nconst ImageModal: React.FC<ImageModalProps> = ({ open, onClose, imageSrc, imageAlt }) => {\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"image-modal\"\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        p: 2,\n      }}\n    >\n      <Box\n        sx={{\n          position: 'relative',\n          maxWidth: '90vw',\n          maxHeight: '90vh',\n          bgcolor: 'background.paper',\n          borderRadius: 1,\n          p: 1,\n        }}\n      >\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: 'white',\n            bgcolor: 'rgba(0, 0, 0, 0.5)',\n            '&:hover': {\n              bgcolor: 'rgba(0, 0, 0, 0.7)',\n            },\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n        <Box\n          component=\"img\"\n          src={imageSrc}\n          alt={imageAlt}\n          sx={{\n            width: '100%',\n            height: '100%',\n            objectFit: 'contain',\n          }}\n        />\n      </Box>\n    </Modal>\n  );\n};\n\nexport default ImageModal;","import React, { useState } from 'react';\nimport { Box, Typography, Grid, Paper } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport ImageModal from '../components/ImageModal';\n\nconst Visualizations: React.FC = () => {\n  const theme = useTheme();\n  const [selectedImage, setSelectedImage] = useState<{src: string, alt: string} | null>(null);\n\n  const visualizations = [\n    {\n      title: 'Age Distribution',\n      description: 'Distribution of crab ages in the dataset, showing the frequency of different age groups. This visualization helps us understand the overall age structure of the crab population in our study.',\n      image: 'age_distribution.png'\n    },\n    {\n      title: 'Age by Sex',\n      description: 'Comparison of age distributions across different crab sexes. This analysis reveals potential differences in aging patterns between male and female crabs.',\n      image: 'age_by_sex.png'\n    },\n    {\n      title: 'Feature Importance',\n      description: 'Relative importance of different physical measurements in predicting crab age. This helps identify which characteristics are most reliable for age estimation.',\n      image: 'feature_importance.png'\n    },\n    {\n      title: 'Correlation Matrix',\n      description: 'Heatmap showing correlations between different physical measurements. Understanding these relationships helps us identify which features might be redundant or complementary.',\n      image: 'correlation_matrix.png'\n    },\n    {\n      title: 'Length vs Age by Sex',\n      description: 'Relationship between crab length and age, separated by sex. This visualization explores how crab length changes with age and whether this relationship differs between males and females.',\n      image: 'scatter_Length_vs_age_by_sex.png'\n    },\n    {\n      title: 'Weight vs Age by Sex',\n      description: 'Relationship between crab weight and age, separated by sex. This analysis shows how crab weight correlates with age and reveals any sex-based differences in this relationship.',\n      image: 'scatter_Weight_vs_age_by_sex.png'\n    }\n  ];\n\n  const handleImageClick = (imagePath: string, imageAlt: string) => {\n    setSelectedImage({\n      src: `${process.env.PUBLIC_URL}/output/plots/${imagePath}`,\n      alt: imageAlt\n    });\n  };\n\n  return (\n    <Box>\n      <Typography\n        variant=\"h1\"\n        sx={{\n          mb: 4,\n          textAlign: 'center',\n          fontSize: { xs: '2rem', sm: '2.5rem', md: '3rem' }\n        }}\n      >\n        Data Visualizations\n      </Typography>\n\n      <Typography\n        variant=\"h5\"\n        sx={{\n          mb: 4,\n          textAlign: 'center',\n          color: theme.palette.text.secondary,\n          maxWidth: '800px',\n          mx: 'auto'\n        }}\n      >\n        Explore our comprehensive set of visualizations that reveal patterns and relationships in our crab age prediction study. Click on any visualization to view it in detail.\n      </Typography>\n\n      <Grid container spacing={4}>\n        {visualizations.map((viz, index) => (\n          <Grid item xs={12} md={6} key={viz.title}>\n            <Paper\n              sx={{\n                p: 3,\n                height: '100%',\n                display: 'flex',\n                flexDirection: 'column',\n                borderTop: `4px solid ${\n                  index % 3 === 0\n                    ? theme.palette.primary.main\n                    : index % 3 === 1\n                    ? theme.palette.secondary.main\n                    : theme.palette.warning.main\n                }`,\n                transition: 'transform 0.2s, box-shadow 0.2s',\n                '&:hover': {\n                  transform: 'translateY(-4px)',\n                  boxShadow: theme.shadows[4],\n                  cursor: 'pointer'\n                }\n              }}\n              onClick={() => handleImageClick(viz.image, viz.title)}\n            >\n              <Typography\n                variant=\"h4\"\n                sx={{\n                  mb: 2,\n                  color:\n                    index % 3 === 0\n                      ? theme.palette.primary.main\n                      : index % 3 === 1\n                      ? theme.palette.secondary.main\n                      : theme.palette.warning.main\n                }}\n              >\n                {viz.title}\n              </Typography>\n              <Typography\n                variant=\"body1\"\n                sx={{\n                  mb: 2,\n                  color: theme.palette.text.secondary\n                }}\n              >\n                {viz.description}\n              </Typography>\n              <Box\n                sx={{\n                  mt: 'auto',\n                  position: 'relative',\n                  width: '100%',\n                  pt: '75%', // 4:3 aspect ratio\n                  overflow: 'hidden',\n                  borderRadius: 1\n                }}\n              >\n                <Box\n                  component=\"img\"\n                  src={`${process.env.PUBLIC_URL}/output/plots/${viz.image}`}\n                  alt={viz.title}\n                  sx={{\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%',\n                    objectFit: 'contain'\n                  }}\n                />\n              </Box>\n            </Paper>\n          </Grid>\n        ))}\n      </Grid>\n\n      {selectedImage && (\n        <ImageModal\n          open={Boolean(selectedImage)}\n          onClose={() => setSelectedImage(null)}\n          imageSrc={selectedImage.src}\n          imageAlt={selectedImage.alt}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default Visualizations;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');"],"names":["_ref","open","onClose","imageSrc","imageAlt","_jsx","Modal","sx","display","alignItems","justifyContent","p","children","_jsxs","Box","position","maxWidth","maxHeight","bgcolor","borderRadius","IconButton","onClick","right","top","color","CloseIcon","component","src","alt","width","height","objectFit","Visualizations","theme","useTheme","selectedImage","setSelectedImage","useState","Typography","variant","mb","textAlign","fontSize","xs","sm","md","palette","text","secondary","mx","Grid","container","spacing","title","description","image","map","viz","index","item","Paper","flexDirection","borderTop","primary","main","warning","transition","transform","boxShadow","shadows","cursor","handleImageClick","imagePath","mt","pt","overflow","left","ImageModal","Boolean","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}