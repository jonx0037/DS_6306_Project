{"version":3,"file":"static/js/561.6f783ba7.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/esm/Card/cardClasses.js","../node_modules/@mui/material/esm/Card/Card.js","../node_modules/@mui/material/esm/CardContent/cardContentClasses.js","../node_modules/@mui/material/esm/CardContent/CardContent.js","pages/Analysis.tsx","../node_modules/@mui/material/esm/CardMedia/cardMediaClasses.js","../node_modules/@mui/material/esm/CardMedia/CardMedia.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport { getCardUtilityClass } from \"./cardClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  overflow: 'hidden'\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n    className,\n    raised = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    raised\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, {\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardContentUtilityClass } from \"./cardContentClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: 16,\n  '&:last-child': {\n    paddingBottom: 24\n  }\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n    className,\n    component = 'div',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { Box, Typography, Card, CardContent, CardMedia, Grid } from '@mui/material';\n\ninterface AnalysisCardProps {\n  title: string;\n  description: string;\n  imagePath: string;\n}\n\nconst AnalysisCard = ({ title, description, imagePath }: AnalysisCardProps) => (\n  <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n    <CardMedia\n      component=\"img\"\n      height=\"200\"\n      image={imagePath}\n      alt={title}\n      sx={{ objectFit: 'contain', p: 2, bgcolor: 'background.paper' }}\n    />\n    <CardContent>\n      <Typography variant=\"h6\" gutterBottom>\n        {title}\n      </Typography>\n      <Typography variant=\"body2\" color=\"text.secondary\">\n        {description}\n      </Typography>\n    </CardContent>\n  </Card>\n);\n\nconst analysisData = [\n  {\n    title: 'Age Distribution',\n    description: 'Distribution of crab ages in the dataset shows clustering around certain age groups.',\n    imagePath: '/output/plots/age_distribution.png'\n  },\n  {\n    title: 'Age by Sex',\n    description: 'Analysis of age patterns across different crab sexes reveals interesting variations.',\n    imagePath: '/output/plots/age_by_sex.png'\n  },\n  {\n    title: 'Correlation Matrix',\n    description: 'Visualization of relationships between different physical measurements.',\n    imagePath: '/output/plots/correlation_matrix.png'\n  },\n  {\n    title: 'Feature Importance',\n    description: 'Key physical characteristics that best predict crab age.',\n    imagePath: '/output/plots/feature_importance.png'\n  }\n];\n\nconst Analysis = () => {\n  return (\n    <Box>\n      <Typography variant=\"h2\" gutterBottom align=\"center\" sx={{ mb: 4 }}>\n        Data Analysis\n      </Typography>\n      \n      <Typography variant=\"body1\" sx={{ mb: 4 }} align=\"center\">\n        Our analysis explores the relationships between various physical characteristics\n        of crabs and their age, identifying key patterns and correlations that inform\n        our prediction models.\n      </Typography>\n\n      <Box sx={{ display: 'grid', gap: 4, gridTemplateColumns: 'repeat(12, 1fr)' }}>\n        {analysisData.map((item, index) => (\n          <Box \n            key={index}\n            sx={{ \n              gridColumn: { \n                xs: 'span 12', \n                md: 'span 6', \n                lg: 'span 6' \n              } \n            }}\n          >\n            <AnalysisCard\n              title={item.title}\n              description={item.description}\n              imagePath={item.imagePath}\n            />\n          </Box>\n        ))}\n      </Box>\n\n      <Typography variant=\"h4\" sx={{ mt: 6, mb: 3 }}>\n        Key Findings\n      </Typography>\n      \n      <Box sx={{ display: 'grid', gap: 3, gridTemplateColumns: 'repeat(12, 1fr)' }}>\n        <Box sx={{ gridColumn: 'span 12' }}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Physical Measurements\n              </Typography>\n              <Typography variant=\"body2\" paragraph>\n                Strong correlations were found between crab age and physical measurements,\n                particularly with shell weight and diameter. These relationships form the\n                foundation of our prediction models.\n              </Typography>\n            </CardContent>\n          </Card>\n        </Box>\n        \n        <Box sx={{ gridColumn: 'span 12' }}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Sex-Based Variations\n              </Typography>\n              <Typography variant=\"body2\" paragraph>\n                Notable differences in age-related characteristics were observed between\n                male and female crabs, suggesting sex-specific growth patterns.\n              </Typography>\n            </CardContent>\n          </Card>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Analysis;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardMediaUtilityClass } from \"./cardMediaClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center',\n  variants: [{\n    props: {\n      isMediaComponent: true\n    },\n    style: {\n      width: '100%'\n    }\n  }, {\n    props: {\n      isImageComponent: true\n    },\n    style: {\n      objectFit: 'cover'\n    }\n  }]\n});\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n  const {\n    children,\n    className,\n    component = 'div',\n    image,\n    src,\n    style,\n    ...other\n  } = props;\n  const isMediaComponent = MEDIA_COMPONENTS.includes(component);\n  const composedStyle = !isMediaComponent && image ? {\n    backgroundImage: `url(\"${image}\")`,\n    ...style\n  } : style;\n  const ownerState = {\n    ...props,\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.includes(component)\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, {\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'img' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined,\n    ...other,\n    children: children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardMedia;"],"names":["getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","React","inProps","ref","useDefaultProps","className","raised","other","ownerState","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","component","as","AnalysisCard","_ref","title","description","imagePath","_jsxs","Card","sx","height","display","flexDirection","children","CardMedia","image","alt","objectFit","p","bgcolor","CardContent","Typography","variant","gutterBottom","color","analysisData","Analysis","Box","align","mb","gap","gridTemplateColumns","map","item","index","gridColumn","xs","md","lg","mt","paragraph","getCardMediaUtilityClass","CardMediaRoot","isMediaComponent","isImageComponent","media","img","backgroundSize","backgroundRepeat","backgroundPosition","variants","style","width","MEDIA_COMPONENTS","IMAGE_COMPONENTS","src","includes","composedStyle","backgroundImage","slots","role"],"sourceRoot":""}